apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: database
          image: postgres:14.3
          envFrom:
            - configMapRef:
                name: venturahr-configmap
          ports:
            - containerPort: 5432
              name: http
          resources:
            requests:
              memory: 0.5Gi
              cpu: 500m

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: venturahr
spec:
  replicas: 1
  selector:
    matchLabels:
      app: venturahr
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: venturahr
    spec:
      initContainers:
        - name: migrator
          image: jonathanabila/venturahr:latest
          command: [ "python", "manage.py", "migrate", "--noinput" ]
          env:
            - name: DB_HOST
              value: "postgres.default.svc.cluster.local"

      containers:
        - name: venturahr
          image: jonathanabila/venturahr:latest
          # Convert to wsgi to production.
          command: ["python", "manage.py", "runserver", "0.0.0.0:8081"]
          env:
            - name: DB_HOST
              value: "postgres.default.svc.cluster.local"
          ports:
            - containerPort: 8081
              name: http
          resources:
            requests:
              memory: 0.5Gi
              cpu: 500m
          livenessProbe:
            httpGet:
              path: /ping/
              port: 8081
            periodSeconds: 5
            initialDelaySeconds: 15
          readinessProbe:
            httpGet:
              path: /health/
              port:  8081
            initialDelaySeconds: 15
            periodSeconds: 30
