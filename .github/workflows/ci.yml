name: CI

on:
  push:
    paths-ignore:
      - "docs/**"
      - "*.md"

  pull_request:
    paths-ignore:
      - "docs/**"
      - "*.md"

jobs:
  test:
    if:
      github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository

    strategy:
      fail-fast: false
      matrix:
        python-version: [ 3.10.4 ]
        os: [ ubuntu-latest ]

    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: ./backend

    services:
      postgres:
        image: postgres:14.3
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: 1.4.0

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
#        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: |
          python -m pip install --upgrade pip
          poetry install --no-interaction --no-root

      - name: Unit tests
        run: poetry run pytest -vvv --cov=. --cov-report=xml
        env:
          DB_HOST: localhost

      - uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          files: ./backend/coverage.xml
          flags: unittests
          name: codecov-venturahr
          fail_ci_if_error: true

      - name: Lint
        uses: pre-commit/action@v3.0.0

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  docker:
    needs: test
    if: github.ref == 'refs/heads/main'

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get tag
        uses: tenhaus/get-release-or-tag@v2
        id: tag

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            jonathanabila/venturahr:${{ steps.tag.outputs.tag }}
            jonathanabila/venturahr:latest
          file: ./dev.Dockerfile
